#!/usr/bin/env python3
"""–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTML –ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö –∏–∑ data/html."""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent))

from src.parsers.html_parser import HTMLParser

def test_html_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç HTML –ø–∞—Ä—Å–µ—Ä –Ω–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö –∏–∑ data/html."""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTML –ø–∞—Ä—Å–µ—Ä–∞ ===")
    
    # –ü—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É —Å HTML —Ñ–∞–π–ª–∞–º–∏
    html_dir = Path("data/html")
    html_files = list(html_dir.glob("*.html"))
    
    print(f"üìÇ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(html_files)}")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
    parser = HTMLParser()
    
    for i, html_file_path in enumerate(html_files, 1):
        print(f"\n{'='*60}")
        print(f"üìÑ –§–∞–π–ª {i}/{len(html_files)}: {html_file_path.name}")
        print('='*60)
        
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        with open(html_file_path, 'rb') as f:
            html_content = f.read()
        
        print(f"‚úÖ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω: {len(html_content)} –±–∞–π—Ç")
        
        # –°–æ–∑–¥–∞–µ–º –ø—É—Ç—å –¥–ª—è –ø–∞—Ä—Å–µ—Ä–∞ (—Å–∏–º—É–ª–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É 1–°)
        file_path = f"objects/catalog125/catalog168/object170/events/{html_file_path.name}"
        doc = parser.parse_html_content(html_content, file_path)
        
        print("‚úÖ HTML —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω!")
        print("\n--- –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ ---")
        print(f"ID: {doc.id}")
        print(f"–¢–∏–ø: {doc.type}")
        print(f"–ò–º—è: {doc.name}")
        print(f"–û–±—ä–µ–∫—Ç: {doc.object}")
        print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {doc.description}")
        print(f"–°–∏–Ω—Ç–∞–∫—Å–∏—Å: {doc.syntax_ru}")
        print(f"–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {doc.return_type}")
        if hasattr(doc, 'usage') and doc.usage:
            print(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: {doc.usage}")
        print(f"–í–µ—Ä—Å–∏—è: {doc.version_from}")
        print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {len(doc.parameters)}")
        
        for j, param in enumerate(doc.parameters, 1):
            print(f"  {j}. {param.name} ({param.type}): {param.description}")
        
        print(f"\n–ü—Ä–∏–º–µ—Ä—ã: {len(doc.examples)}")
        for j, example in enumerate(doc.examples, 1):
            print(f"  {j}. {example}")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤
        if hasattr(doc, 'methods') and doc.methods:
            print(f"\n–ú–µ—Ç–æ–¥—ã: {len(doc.methods)}")
            for j, method in enumerate(doc.methods, 1):
                print(f"  {j}. {method.name} ({method.name_en})")
        
        if hasattr(doc, 'properties') and doc.properties:
            print(f"\n–°–≤–æ–π—Å—Ç–≤–∞: {len(doc.properties)}")
            for j, prop in enumerate(doc.properties, 1):
                print(f"  {j}. {prop.name} ({prop.name_en})")
        
        if hasattr(doc, 'events') and doc.events:
            print(f"\n–°–æ–±—ã—Ç–∏—è: {len(doc.events)}")
            for j, event in enumerate(doc.events, 1):
                print(f"  {j}. {event.name} ({event.name_en})")
    
    print(f"\n{'='*60}")
    print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {len(html_files)}")
    print('='*60)

if __name__ == "__main__":
    test_html_parser()
